name: Deploy Image Processor CDK Stack

on:
  push:
    branches:
      - feat/image_processing

permissions:
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_HUB_SECRETS }}" | docker login -u sadhanashetty --password-stdin
          docker build -f ./image_processing/Dockerfile ./image_processing -t sadhanashetty/image-processor:latest
          docker push sadhanashetty/image-processor:latest



      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm global packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-aws-cdk
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_DEPLOY_ROLE }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: eu-west-1

      - name: CDK Synth
        run: cdk synth

      - name: CDK Deployment
        run: cdk deploy --require-approval never
